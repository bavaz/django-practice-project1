Model: How to store stuff
View: How website gets stuff stored in models and processes it for the user
Template: View uses template to display contents (processed from model)

Steps:
] create a folder F
] python3 -m venv F
- Creates virtual env
] Enter F/Lib
] source activate
- Activates virtual env
] pip install django
] django-admin startproject ff
- Creates stem of project
] Enter ff
] python3 manage.py migrate
- Changes made to models (we use Django default models)
] python3 manage.py runserver (Ctrl+X to stop)
- Starts server. Check http://127.0.0.1:8000/
] python manage.py startapp myapp
] Add "myapp'," to ff/settings.py
] Add os.path.join(BASE_DIR, 'templates') to DIRS in settings.py
] Add models to myapp/models.py
- Can use Meta subclass to order models
] After making changes run from ff:
python3 manage.py makemigrations
python3 manage.py migrate
] Register models in admin.py under myapp. Add following code to admin.py:
from myapp.models import * 
(Imports all models)
admin.site.register(ModelName)
(Displays model in control panel)
] Run winpty python manage.py createsuperuser to create superuser (answer prompts)
Run python manage.py runserver
- Login into http://127.0.0.1:8000/admin to check if it works
- That's it for models
] Create views.py, a file for our views in ff
] In urls.py add following:
from ff.views import viewFunc
- In urlpatterns add following:
path('', viewFunc.as_view(template_name="template.html"), name="viewFunc"),
(This might not apply)
- End of view logic
] Under ff create templates folder with file template.html
- Create the template.html file
- Django templates use DRY HTML called Django HTML

• To check the sqlite table, run sqlite3 command in console
• Then to find tables in it, run 
.tables
• Then to find data 
select * from tablename;